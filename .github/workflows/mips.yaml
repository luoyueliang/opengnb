name: Build and Publish mips Release

on:
  push:
    branches:
      - main

jobs:
  build_and_publish_release:
    runs-on: ubuntu-latest 

    env:
      RELEASE_NAME: opengnb_mips_lastest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: gnbdev/opengnb
          ref: master  # 指定要检出的分支或提交

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
          
      - name: Install ARM64 cross-compiler
        run: sudo apt-get install -y gcc-mips-linux-gnu
      
      - name: Build binary
        run: |
          export CC=gcc-mips-linux-gnu 
          GCC_MIPS_PATH=$(which gcc-mips-linux-gnu)
          if [ -n "$GCC_MIPS_PATH" ]; then
            echo "Found gcc-mips-linux-gnu at: $GCC_MIPS_PATH"
            
            # 设置CROSS_COMPILE变量
            export CROSS_COMPILE="$GCC_MIPS_PATH-"
          else
            echo "Error: gcc-mips-linux-gnu not found. Please install it or specify the path."
            exit 1
          fi 
          sed -i 's|\(CC} -o ${GNB_CTL} ${GNB_CTL_OBJS} ${CLI_LDFLAGS}\)|\1 -static|' Makefile.linux
          sed -i 's|\(CC} -o ${GNB_ES} ${GNB_ES_OBJS} ${CRYPTO_OBJS} ${MINIUPNP_OBJS} ${LIBNATPMP_OBJS} ${GNB_ES_LDFLAGS}\)|\1 -static|' Makefile.linux
          sed -i 's|\(CC} -o ${GNB_CRYPTO} ./src/gnb_crypto.o ${CRYPTO_OBJS} ${CLI_LDFLAGS}\)|\1 -static|' Makefile.linux
          sed -i 's|\(CC} -o ${GNB_CLI} ${GNB_OBJS} ${GNB_CLI_OBJS} ${GNB_PF_OBJS} ${CRYPTO_OBJS} ${CLI_LDFLAGS}\)|\1 -static|' Makefile.linux
          make -f Makefile.linux clean
          make -f Makefile.linux install 
        shell: bash
      
      - name: Build and Package
        run: |
          mkdir release
          cp -r examples/node_config_example conf
          cp -r bin release/
          cp -r conf release/
          tar -czvf ${{ env.RELEASE_NAME }}.tar.gz -C release .
        shell: bash
        
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
            files: ${{ env.RELEASE_NAME }}.tar.gz
            tag_name: v1.0.0  # 你的版本号 
            body: | 
              Release notes for v1.0.0
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
