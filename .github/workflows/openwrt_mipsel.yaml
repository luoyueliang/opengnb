name: Build and Publish mipsel Release for OpenWRT on MT7621

on:
  workflow_dispatch:

jobs:
  build_and_publish_mips_release:
    runs-on: ubuntu-latest 

    env:
      RELEASE_NAME: opengnb_openwrt_mipsel_1.6.a

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: luoyueliang/gnb
          token: ${{ secrets.PRIVATE_REPO_PAT }}
          ref: main  # 指定要检出的分支或提交

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
          
      - name: Install musl-based mipsel cross-compiler
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools musl-dev gcc-mipsel-linux-musl
          wget https://musl.cc/mipsel-linux-musl-cross.tgz
          tar -xvzf mipsel-linux-musl-cross.tgz
          echo "$(pwd)/mipsel-linux-musl-cross/bin" >> $GITHUB_PATH
        
      - name: Build binary with musl
        run: |
          GCC_MIPS_PATH=$(which mipsel-linux-musl-gcc)
          if [ -n "$GCC_MIPS_PATH" ]; then
            echo "Found mipsel-linux-musl-gcc at: $GCC_MIPS_PATH"
          else
            echo "Error: mipsel-linux-musl-gcc not found."
            exit 1
          fi 
          export CROSS_COMPILE=mipsel-linux-musl-
          export CC=${CROSS_COMPILE}gcc
          export CXX=${CROSS_COMPILE}g++
          export LD=${CROSS_COMPILE}ld
          export AR=${CROSS_COMPILE}ar
          export AS=${CROSS_COMPILE}as
          export RANLIB=${CROSS_COMPILE}ranlib
          
          sed -i 's|CC} -o ${GNB_CTL}|CC} -o ${GNB_CTL} -static|' Makefile.openwrt
          sed -i 's|CC} -o ${GNB_ES}|CC} -o ${GNB_ES} -static|' Makefile.openwrt
          sed -i 's|CC} -o ${GNB_CRYPTO}|CC} -o ${GNB_CRYPTO} -static|' Makefile.openwrt
          sed -i 's|CC} -o ${GNB_CLI}|CC} -o ${GNB_CLI} -static|' Makefile.openwrt
          
          make -f Makefile.openwrt clean
          make -f Makefile.openwrt install 
        shell: bash
      
      - name: Build and Package
        run: |
          mkdir release
          cp -r examples/node_config_example conf
          cp -r bin release/
          cp -r conf release/
          tar -czvf ${{ env.RELEASE_NAME }}.tar.gz -C release .
        shell: bash
        
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
            files: ${{ env.RELEASE_NAME }}.tar.gz
            tag_name: v1.6.a  # 你的版本号 
            body: | 
              Release notes for v1.6.a
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
