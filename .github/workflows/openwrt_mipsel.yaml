name: Build and Publish mipsel Release for OpenWRT on MT7621

on:
  workflow_dispatch:

jobs:
  build_and_publish_mips_release:
    runs-on: ubuntu-latest 

    env:
      RELEASE_NAME: opengnb_openwrt_mipsel_1.6.a

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: luoyueliang/gnb
          token: ${{ secrets.PRIVATE_REPO_PAT }}
          ref: main  # 指定要检出的分支或提交

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential flex bison \
              autoconf automake texinfo libtool wget curl gawk \
              cmake ninja-build

      - name: Install pre-built musl-based mipsel cross-compiler (binary)
        run: |
          # 如果需要，添加非官方源或下载工具链二进制包
          # 示例：安装包含 mipsel 交叉编译器的包
          sudo apt-get install -y gcc-mipsel-linux-gnu musl-tools musl-dev

          # 验证安装的交叉编译器
          if ! command -v mipsel-linux-musl-gcc >/dev/null; then
            echo "Error: mipsel-linux-musl-gcc not found."
            exit 1
          fi

          # 如果安装了 `musl-tools`，它将为您提供需要的工具链
          echo "Using pre-built musl-based mipsel cross-compiler."

      - name: Build binary with musl
        run: |
          export CROSS_COMPILE=mipsel-linux-musl-
          export CC=${CROSS_COMPILE}gcc
          export CXX=${CROSS_COMPILE}g++
          export LD=${CROSS_COMPILE}ld
          export AR=${CROSS_COMPILE}ar
          export AS=${CROSS_COMPILE}as
          export RANLIB=${CROSS_COMPILE}ranlib

          # 确保 musl 交叉编译器可用
          if ! command -v ${CC} >/dev/null; then
            echo "Error: ${CC} not found."
            exit 1
          fi

          # 修改 Makefile 以进行静态编译
          sed -i 's|CC} -o ${GNB_CTL}|CC} -o ${GNB_CTL} -static|' Makefile.openwrt
          sed -i 's|CC} -o ${GNB_ES}|CC} -o ${GNB_ES} -static|' Makefile.openwrt
          sed -i 's|CC} -o ${GNB_CRYPTO}|CC} -o ${GNB_CRYPTO} -static|' Makefile.openwrt
          sed -i 's|CC} -o ${GNB_CLI}|CC} -o ${GNB_CLI} -static|' Makefile.openwrt

          make -f Makefile.openwrt clean
          make -f Makefile.openwrt install 

      - name: Clean up temporary files
        run: |
          # 清理所有的临时文件以释放磁盘空间
          sudo rm -rf /tmp/*

      - name: Build and Package
        run: |
          mkdir release
          cp -r examples/node_config_example conf
          cp -r bin release/
          cp -r conf release/
          tar -czvf ${{ env.RELEASE_NAME }}.tar.gz -C release .
        shell: bash
        
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
            files: ${{ env.RELEASE_NAME }}.tar.gz
            tag_name: v1.6.a  # 你的版本号 
            body: | 
              Release notes for v1.6.a
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
