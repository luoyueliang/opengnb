name: Build and Publish mipsel Release for OpenWRT on MT7621

on:
  workflow_dispatch:

jobs:
  build_and_publish_mips_release:
    runs-on: ubuntu-latest

    env:
      RELEASE_NAME: opengnb_openwrt_mipsel_1.6.a

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: luoyueliang/gnb
          token: ${{ secrets.PRIVATE_REPO_PAT }}
          ref: main

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential flex bison \
              autoconf automake texinfo libtool wget curl gawk \
              cmake ninja-build

      - name: Download and install pre-built mipsel cross compiler
        run: |
          wget https://musl.cc/mipsel-linux-musl-cross.tgz -O /tmp/mipsel-linux-musl-cross.tgz
          sudo tar -xvzf /tmp/mipsel-linux-musl-cross.tgz -C /usr/local/
          sudo rm -rf /tmp/mipsel-linux-musl-cross.tgz
          echo "/usr/local/mipsel-linux-musl/bin" >> $GITHUB_PATH
          echo "TOOLCHAIN_PATH=/usr/local/mipsel-linux-musl" >> $GITHUB_ENV

      - name: Verify mipsel-linux-musl-gcc
        run: |
          if ! command -v mipsel-linux-musl-gcc >/dev/null; then
            echo "Error: mipsel-linux-musl-gcc not found."
            exit 1
          fi

      - name: Build binary with musl
        run: |
          export CROSS_COMPILE=/usr/local/mipsel-linux-musl/bin/mipsel-linux-musl-
          export CC=${CROSS_COMPILE}gcc
          export CXX=${CROSS_COMPILE}g++
          export LD=${CROSS_COMPILE}ld
          export AR=${CROSS_COMPILE}ar
          export AS=${CROSS_COMPILE}as
          export RANLIB=${CROSS_COMPILE}ranlib

          if ! command -v ${CC} >/dev/null; then
            echo "Error: ${CC} not found."
            exit 1
          fi

          sed -i 's|CC} -o ${GNB_CTL}|CC} -o ${GNB_CTL} -static|' Makefile.openwrt
          sed -i 's|CC} -o ${GNB_ES}|CC} -o ${GNB_ES} -static|' Makefile.openwrt
          sed -i 's|CC} -o ${GNB_CRYPTO}|CC} -o ${GNB_CRYPTO} -static|' Makefile.openwrt
          sed -i 's|CC} -o ${GNB_CLI}|CC} -o ${GNB_CLI} -static|' Makefile.openwrt

          make -f Makefile.openwrt clean
          make -f Makefile.openwrt install

      - name: Clean up temporary files
        run: |
          sudo rm -rf /tmp/*

      - name: Build and Package
        run: |
          mkdir release
          cp -r examples/node_config_example conf
          cp -r bin release/
          cp -r conf release/
          tar -czvf ${{ env.RELEASE_NAME }}.tar.gz -C release .
        shell: bash

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
            files: ${{ env.RELEASE_NAME }}.tar.gz
            tag_name: v1.6.a
            body: |
              Release notes for v1.6.a
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
