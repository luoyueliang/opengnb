name: Build and Publish Release for MacOS_64

on:
  workflow_dispatch:

jobs:
  build_and_publish_release:
    runs-on: ubuntu-latest 

    env:
      RELEASE_NAME: Darwin_x86_64_lastest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: gnbdev/opengnb
          ref: master  # 指定要检出的分支或提交

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
          
      - name: Install Darwin cross-compiler
        run: |
          sudo apt-get update && sudo apt-get install -y build-essential cmake git
          git clone https://github.com/tpoechtrager/osxcross.git
          cd osxcross
          sudo sh -x tools/get_dependencies.sh
          sudo sh -x ./build.sh
          sudo mv target /usr/osxcross
          sudo mv tools /usr/osxcross
          export PATH="/usr/osxcross/target/bin:$PATH"
          export LD_LIBRARY_PATH="/usr/osxcross/target/lib:$LD_LIBRARY_PATH"
        shell: bash
          
      - name: Build binary
        run: |
          export CC=o64-clang
          sed -i 's/^\(CFLAGS.*\)/\1 -static/' Makefile.Darwin
          sed -i 's/^\(CLI_LDFLAGS.*\)/\1 -static/' Makefile.Darwin
          sed -i 's/^\(GNB_ES_LDFLAGS.*\)/\1 -static/' Makefile.Darwin
          make -f Makefile.Darwin clean
          make -f Makefile.Darwin install 
        shell: bash
      
      - name: Build and Package
        run: |
          mkdir release
          cp -r examples/node_config_example conf
          cp -r bin release/
          cp -r conf release/
          tar -czvf ${{ env.RELEASE_NAME }}.tar.gz -C release .
        shell: bash
        
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
            files: ${{ env.RELEASE_NAME }}.tar.gz
            tag_name: v1.4.5.a  # 你的版本号 
            body: | 
              Release notes for v1.4.5.a
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
