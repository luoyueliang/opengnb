name: Build and Publish OpenGNB for macOS Intel and Apple Silicon

on:
  workflow_dispatch:

jobs:
  build_and_publish_opengnb:
    runs-on: macos-latest  # GitHub 提供的 macOS 运行环境（默认 arm64）

    env:
      RELEASE_NAME: opengnb_macos_1.6.a

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: luoyueliang/gnb
          token: ${{ secrets.PRIVATE_REPO_PAT }}
          ref: main

      - name: Install dependencies
        run: |
          brew install cmake ninja

      - name: Modify Makefile for static linking
        run: |
          echo "🔧 修改 Makefile.Darwin 以强制使用静态库..."
          sed -i '' 's|-L/usr/lib||g' Makefile.Darwin
          sed -i '' 's|CLI_LDFLAGS=.*|CLI_LDFLAGS=-pthread -static|g' Makefile.Darwin
          sed -i '' 's|GNB_ES_LDFLAGS=.*|GNB_ES_LDFLAGS=-pthread -static|g' Makefile.Darwin
          sed -i '' 's|-lssl|-l:libssl.a|g' Makefile.Darwin
          sed -i '' 's|-lcrypto|-l:libcrypto.a|g' Makefile.Darwin
          sed -i '' 's|-lz|-l:libz.a|g' Makefile.Darwin
          sed -i '' 's|-lminiupnpc|-l:libminiupnpc.a|g' Makefile.Darwin
          sed -i '' 's|-lnatpmp|-l:libnatpmp.a|g' Makefile.Darwin
          echo "✅ Makefile.Darwin 修改完成！"

      # 编译 x86_64 版本
      - name: Build binary for x86_64
        run: |
          export CC="clang -arch x86_64"
          export CXX="clang++ -arch x86_64"
          export LD="ld"
          export AR="ar"
          export RANLIB="ranlib"

          make -f Makefile.Darwin clean
          make -f Makefile.Darwin install

          # 检查是否仍然链接动态库
          echo "🔍 检查 x86_64 版本是否包含动态库..."
          if otool -L bin/gnb | grep -q ".dylib"; then
            echo "❌ 仍然依赖动态库！"
            exit 1
          else
            echo "✅ x86_64 版本完全静态！"
          fi

          # 打包 x86_64 版本
          mkdir -p release/macos_x86_64
          cp -r bin release/macos_x86_64/
          tar -czvf opengnb_macos_1.6.a_x86_64.tar.gz -C release/macos_x86_64 .
          echo "✅ x86_64 binary built and packaged"

      # 编译 arm64 版本
      - name: Build binary for arm64
        run: |
          export CC="clang -arch arm64"
          export CXX="clang++ -arch arm64"
          export LD="ld"
          export AR="ar"
          export RANLIB="ranlib"

          make -f Makefile.Darwin clean
          make -f Makefile.Darwin install

          # 检查是否仍然链接动态库
          echo "🔍 检查 arm64 版本是否包含动态库..."
          if otool -L bin/gnb | grep -q ".dylib"; then
            echo "❌ 仍然依赖动态库！"
            exit 1
          else
            echo "✅ arm64 版本完全静态！"
          fi

          # 打包 arm64 版本
          mkdir -p release/macos_arm64
          cp -r bin release/macos_arm64/
          tar -czvf opengnb_macos_1.6.a_arm64.tar.gz -C release/macos_arm64 .
          echo "✅ arm64 binary built and packaged"

      # 上传 x86_64 版本
      - name: Upload x86_64 Release Asset
        uses: softprops/action-gh-release@v1
        with:
            files: opengnb_macos_1.6.a_x86_64.tar.gz
            tag_name: v1.6.a
            body: |
              Release notes for v1.6.a (x86_64)
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 上传 arm64 版本
      - name: Upload arm64 Release Asset
        uses: softprops/action-gh-release@v1
        with:
            files: opengnb_macos_1.6.a_arm64.tar.gz
            tag_name: v1.6.a
            body: |
              Release notes for v1.6.a (arm64)
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
